[project]
name = "spark-streaming-pipeline"
version = "1.0.0"
description = "Production-ready Spark Streaming pipeline template"
authors = [
    {name = "Data Engineering Team", email = "data-eng@company.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"

dependencies = [
    "pyspark>=3.5.0",
    "delta-spark>=3.0.0",
    "kafka-python>=2.0.2",
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "structlog>=23.0.0",
    "confluent-kafka>=2.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-spark>=0.6.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "testcontainers>=3.7.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "factory-boy>=3.2.0",
]

monitoring = [
    "prometheus-client>=0.17.0",
    "grafana-api>=1.0.3",
    "py4j>=0.10.9",
]

cloud = [
    "boto3>=1.28.0",
    "azure-eventhub>=5.11.0",
    "google-cloud-pubsub>=2.18.0",
]

[project.scripts]
streaming-pipeline = "streaming_pipeline.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=streaming_pipeline",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=75"
]

[tool.coverage.run]
source = ["streaming_pipeline"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]